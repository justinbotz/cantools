from django.db import modelsfrom django.contrib.auth.models import Userfrom django.db.models.signals import post_savefrom inventory.models import Assetfrom libraries.models import LibraryProfile,LibraryVisit# ...# I'm working on adding# an element so individuals can follow a library# and a way to track that in the adminclass UserProfile(models.Model):    # Linking to the built-in User model    user = models.OneToOneField(User, on_delete=models.CASCADE)    follows = models.ManyToManyField(        "self",        related_name="followed_by",        symmetrical=False,        blank=True    )    # Basic User Information    first_name = models.CharField(max_length=100)    last_name = models.CharField(max_length=100)    # Images    profile_picture = models.ImageField(upload_to='user_profiles/')    header_image = models.ImageField(upload_to='user_profiles/')    # Address Information    street_address = models.CharField(max_length=255)    city = models.CharField(max_length=100)    state = models.CharField(max_length=100)    zip_code = models.CharField(max_length=20)    # Additional Fields    date_of_birth = models.DateField(null=True, blank=True)    preferred_pronouns = models.CharField(max_length=30, blank=True)    phone_number = models.CharField(max_length=20, blank=True)    email = models.EmailField(blank=True)    personal_website = models.URLField(blank=True)    biography = models.TextField(blank=True)    linkedin_url = models.URLField(blank=True)    facebook_url = models.URLField(blank=True)    twitter_url = models.URLField(blank=True)    occupation = models.CharField(max_length=100, blank=True)    organization = models.CharField(max_length=100, blank=True)    skills_interests = models.TextField(blank=True)    country = models.CharField(max_length=100, blank=True)    region = models.CharField(max_length=100, blank=True)    preferred_language = models.CharField(max_length=30, blank=True)    profile_visibility = models.BooleanField(default=True)    member_since = models.DateTimeField(auto_now_add=True)    last_updated = models.DateTimeField(auto_now=True)    agreed_to_terms = models.BooleanField(default=False)    # permissions    ADMIN = 'admin'    MEMBER = 'member'    BLOCKED = 'blocked'    FOLLOWING ='following'    ROLE_CHOICES = [        (ADMIN, 'Admin'),        (MEMBER, 'Member'),        (BLOCKED, 'Blocked'),        (FOLLOWING, 'Following'),    ]    status = models.CharField(        max_length=10,        choices=ROLE_CHOICES,        default=FOLLOWING,    )    def create_profile(sender, instance, created, **kwargs):        if created:            user_profile = UserProfile(user=instance)            user_profile.save()            user_profile.follows.set([instance.userprofile.id])            user_profile.save()    # Create a Profile for each new user.    post_save.connect(create_profile, sender=User)    def __str__(self):        return f"{self.user.username}'s Profile"class Wishlist(models.Model):    user = models.OneToOneField(User, on_delete=models.CASCADE, related_name='wishlist')    assets = models.ManyToManyField(Asset, blank=True)    def __str__(self):        return f"{self.user.username}'s Wishlist"